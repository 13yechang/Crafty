/*** Animation component** Crafty(player).animate("walk_left", 0, 1, 4, 100);* Crafty(player).animate("walk_left");* Crafty(player).stop();*/Crafty.c("animate", {	_reels: {},	_frame: null,	_current: null,	animate: function(id, fromx, y, tox, duration) {		//play a reel		if(arguments.length === 2 && typeof fromx === "number") {			//make sure not currently animating			clearInterval(this._interval);			this._current = id;						duration = fromx;			var reel = this._reels[id];			this._frame = {				reel: reel, //reel to play				frameTime: Math.ceil(duration / reel.length), //number of frames inbetween slides				frame: 0, //current slide/frame				current: 0			};						this.bind("enterframe", this.drawFrame);			return this;		}		if(typeof fromx === "number") {			var frames = tox + 1 - fromx, i = fromx,				reel = [],				tile = Crafty.tile;			for(;i<=tox;i++) {				reel.push([i * tile, y * tile]);			}			this._reels[id] = reel;		} else if(typeof fromx === "array") {			this._reels[id] = fromx;		}				return this;	},		drawFrame: function(e) {		var data = this._frame;				if(this._frame.current++ === data.frameTime) {			var pos = data.reel[data.frame++];						this.__coord[0] = pos[0];			this.__coord[1] = pos[1];			this._frame.current = 0;		}						if(data.frame === data.reel.length && this._frame.current === data.frameTime) {			data.frame = 0;			this.stop();			return;		}	},		stop: function() {		this.unbind("enterframe", this.drawFrame);		this._current = null;		this._frame = null;	},		isPlaying: function(id) {		if(!id) return !!this._interval;		return this._current === id; 	}});